# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-16 10:36
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mentoring', '0010_auto_20160407_1055'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menteefeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('impression', models.TextField(max_length=500, verbose_name='오늘 멘토링을 받고 난 기분이 어떤가요?')),
                ('expect', models.TextField(max_length=500, verbose_name='멘토링 받기 전에 기대하는 것이 있었나요? 그렇다면 어느 정도 해결되었나요?')),
                ('inconvinience', models.TextField(max_length=500, verbose_name='아직 아쉬운 점이 있다면 질문으로 적어주세요.')),
                ('touring_rating', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='투어 평점')),
                ('touring_rating_reason', models.TextField(max_length=500, verbose_name='그 이유는 무엇인가요? 개선했으면 하는 점')),
                ('mentor_rating', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='멘토 평점')),
                ('mentor_rating_reason', models.TextField(max_length=500, verbose_name='멘토는 어떤 사람인가요? 어떤 점이 매력인가요?')),
                ('mirroring', models.TextField(max_length=500, verbose_name='나는 멘토의 어떤 면을 닮고 싶은가요? 어떻게 하면 그 모습을 닮을 수 있을까요?')),
                ('wannabe', models.TextField(max_length=500, verbose_name='원하는 멘토상')),
                ('mentoring_rating', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='멘토링 평점')),
                ('mentoring_rating_reason', models.TextField(max_length=500, verbose_name='이 프로그램을 통해 얼마나 진로에 대해 이해할 수 있었나요?')),
                ('helpness', models.TextField(max_length=500, verbose_name='이 프로그램을 통해 학교생활을 적극적으로 하는데 도움이 될 것 같은가요?')),
                ('onetime', models.TextField(max_length=500, verbose_name='1회성 멘토 서비스에 만족하나요? 만일 지속적인 멘토링을 받고 싶다면 어떻게 운영되면 좋을까요?')),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('mentoring', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mentoring.Mentoring')),
            ],
        ),
        migrations.CreateModel(
            name='Mentorfeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dream', models.TextField(max_length=1000, verbose_name='학생의 꿈은 무엇인가요?')),
                ('happiness', models.TextField(max_length=1000, verbose_name='학생은 언제 가장 행복해하나요?')),
                ('worry', models.TextField(max_length=1000, verbose_name='학생의 현재 가장 큰 고민은 무엇인가요?')),
                ('subjects', models.TextField(max_length=1000, verbose_name='학생이 가장 좋아하는 과목, 잘하는 과목, 부족한 과목은 무엇이고, 그 원인은 무엇인가요?')),
                ('future_path', models.TextField(max_length=1000, verbose_name='학생이 원하는 진로와 그 진로를 택하게 된 근거. 그에 대한 멘토의 조언(행복과 연관지어)')),
                ('lifestyle', models.TextField(max_length=1000, verbose_name='학생의 생활패턴(시간 관리)분석 및 칭찬할 점과 보완했으면 하는 점')),
                ('sw', models.TextField(max_length=1000, verbose_name='학생의 장점 및 부족한 점(정서적 측면에서 토닥이며 학습 동기를 유발할 수 있도록)')),
                ('reference', models.TextField(max_length=1000, verbose_name='집에서 학생을 지도할 때 참고했으면 하는 내용')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('mentoring', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mentoring.Mentoring')),
            ],
        ),
    ]
